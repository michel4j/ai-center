#!/bin/sh
#
# chkconfig: 345 98 02
# description:  EPICS IOC


# -------------- Environment Parameters (MODIFY) for each instance -----------------------#

ioc_path=/cmcf_apps/ai-center                 # location where IOC Code is installed
procserv_path=/cmcf_apps/bin                     # location where procserv is installed
epics_env=/cmcf_apps/profile.d/epics.sh       # EPICS environment setup script

# -------------- Device Parameters (MODIFY) for each instance ----------------------------#
device='AIC1608-501'                           # Device Name
portno=18001                                        # ProcServ Port Number
network='10.52.4.0/22'                              # ProcServ Subnet
appdir=/cmcf_apps/iocApps/${device}              # IOC Directory
server=''
camera=''
                                                    
# Define additional command line arguments here and add them to the start function after 
# the --device '$device" text


# --------------------- Update Only once for each IOC Type ------------------------------#
iocname=`hostname`
cmdfile=${ioc_path}/bin/ai-center-ioc
proccmd=${procserv_path}/procServ
pidfile="/var/run/${device}.pid"
logfile="/var/log/${device}.log"

# Prepare environment and  Source function library.
. /etc/rc.d/init.d/functions
. ${epics_env}

# Sanity checks.
[ -x $proccmd ] || exit 0
[ -x $cmdfile ] || exit 0


start() {
    echo -n $"Starting procServ: "
    #--allow --network $network
    daemon $proccmd -c $appdir --noautorestart --logfile="$logfile" --pidfile="$pidfile" --allow $portno \
      $cmdfile --device "$device" --server "$server" --camera "$camera"
    RETVAL=$?
    echo
    [ $RETVAL -eq 0 ] && touch /var/lock/subsys/$device
}

stop() {
    echo -n $"Stopping procServ: "

    killproc -p $pidfile
    RETVAL=$?
    echo
    if [ $RETVAL -eq 0 ]; then
        rm -f /var/lock/subsys/$device
        rm -f /var/run/$pidfile
    fi
}

# See how we were called.
case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p $pidfile $device
        RETVAL=$?
        ;;
    restart)
        stop
	    sleep 3
        start
        ;;
    condrestart)
        if [ -f /var/lock/subsys/$device ]; then
            stop
	        sleep 3
            start
        fi
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart}"
        ;;
esac
exit $RETVAL
